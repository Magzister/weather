#!/usr/bin/env python3.12
from app.arg_parser import ArgParser, Command
from app.exceptions import (IPServiceError,
                            LocationServiceError,
                            WeatherServiceError)
from app.ip_service import IPService, Ifconfig
from app.location_service import LocationService, Ipapi
from app.weather_service import WeatherService, VisualCrossing
from app.formatter import format_weather
from app.db.db_config import engine
from app.db.models import Base
from app.web_pserser.parser import SeaTemperature


def get_weather_info(
        ip_service: IPService,
        location_service: LocationService,
        weather_service: WeatherService) -> str:
    try:
        ip = ip_service.get_ip()
        location = location_service.get_location(ip)
        weather = weather_service.get_weather(location.coordinates)
    except IPServiceError as err:
        print("Can't get information form ip service:", err)
        exit(1)
    except LocationServiceError as err:
        print("Can't get location information from location service:", err)
        exit(1)
    except WeatherServiceError as err:
        print("Can't get weather information from weather service:", err)
        exit(1)
    return format_weather(location, weather)


def main():
    args = ArgParser().get_args()
    Base.metadata.create_all(engine)
    match args.command:
        case Command.CREATE_SST_DATABASE:
            print("Creating database...")
            SeaTemperature().populate_db()
        case Command.NO_COMMAND:
            ip_service = Ifconfig()
            location_service = Ipapi()
            weather_service = VisualCrossing()
            print(get_weather_info(ip_service,
                                   location_service,
                                   weather_service))


if __name__ == "__main__":
    main()
